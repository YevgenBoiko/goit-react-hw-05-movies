{"version":3,"file":"static/js/782.2779ddc0.chunk.js","mappings":"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","sources":["components/GetMovieInfo.jsx","components/AdditionalInfo/AdditionalInfo.styled.js","components/AdditionalInfo/AdditionalInfo.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst PATH = 'https://api.themoviedb.org';\nconst KEY = 'aae9ea2751cc0bf7dcfb9c2a2683d9fc';\n\nexport const GetTranding = async () => {\n  try {\n    const response = await axios.get(\n      `${PATH}/3/trending/movie/day?api_key=${KEY}`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetSearchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${PATH}/3/search/movie?api_key=${KEY}&language=en-US&page=1&query=${query}`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetMovieByID = async id => {\n  try {\n    const response = await axios.get(\n      `${PATH}/3/movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetCastByID = async id => {\n  try {\n    const response = await axios.get(\n      `${PATH}/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetReviewsByID = async id => {\n  try {\n    const response = await axios.get(\n      `${PATH}/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    // console.log(response);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.div`\n  padding-left: 15px;\n  padding-bottom: 30px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  :hover {\n    color: orangered;\n  }\n`;\n","import { Section, StyledLink } from './AdditionalInfo.styled';\n\nconst AdditionalInfo = () => {\n  return (\n    <Section>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <StyledLink to=\"cast\">Cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\n        </li>\n      </ul>\n    </Section>\n  );\n};\n\nexport default AdditionalInfo;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackBtn = styled(Link)`\n  display: flex;\n  justify-content: center;\n  gap: 5px;\n  text-decoration: none;\n  padding: 5px 7px;\n  margin: 15px 15px;\n  width: 55px;\n  border: 1px black solid;\n  border-radius: 4px;\n  color: black;\n  :hover {\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    color: orangered;\n    border: orangered 1px solid;\n  }\n`;\n\nexport const MovieSection = styled.section`\n  display: flex;\n  padding: 15px;\n`;\n\nexport const MovieDetailsCont = styled.div`\n  margin-left: 15px;\n`;\n\nexport const Title = styled.h1`\n  margin-top: 0;\n`;\n","import {\n  BackBtn,\n  MovieDetailsCont,\n  MovieSection,\n  Title,\n} from './MovieInfo.styled';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport PropTypes from 'prop-types';\n\nconst MovieInfo = ({\n  movie: { original_title, vote_average, overview, genres, poster_path },\n  backLink,\n}) => {\n  return (\n    <>\n      <BackBtn to={backLink}>\n        <FiArrowLeft />\n        Back\n      </BackBtn>\n      <MovieSection>\n        {poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n            alt={original_title}\n          />\n        ) : (\n          <img src=\"https://gdr.one/simg/300x300\" alt=\"\" />\n        )}\n\n        <MovieDetailsCont>\n          <Title>{original_title}</Title>\n          {vote_average > 0 && <p>User score: {vote_average}</p>}\n          {overview && overview.length > 0 ? (\n            <>\n              <h2>Overview</h2>\n              <p>{overview}</p>\n            </>\n          ) : (\n            ''\n          )}\n          {genres && genres.length > 0 ? (\n            <>\n              <h2>Genres</h2>\n              <p>{genres.map(genre => genre.name).join(' ')}</p>\n            </>\n          ) : (\n            ''\n          )}\n        </MovieDetailsCont>\n      </MovieSection>\n    </>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    overview: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n    poster_path: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default MovieInfo;\n","import AdditionalInfo from 'components/AdditionalInfo/AdditionalInfo';\nimport { GetMovieByID } from 'components/GetMovieInfo';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n\n  const location = useLocation();\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    GetMovieByID(movieId).then(response => setMovie(response.data));\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <MovieInfo movie={movie} backLink={backLinkLocationRef.current} />\n      )}\n      <section>\n        <AdditionalInfo />\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </section>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["PATH","KEY","GetTranding","axios","response","console","error","GetSearchMovies","query","GetMovieByID","id","GetCastByID","GetReviewsByID","Section","styled","StyledLink","Link","to","BackBtn","MovieSection","MovieDetailsCont","Title","movie","original_title","vote_average","overview","genres","poster_path","backLink","src","alt","length","map","genre","name","join","useState","setMovie","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useEffect","then","data","current","Suspense","fallback"],"sourceRoot":""}