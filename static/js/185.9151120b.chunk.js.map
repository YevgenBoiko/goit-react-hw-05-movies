{"version":3,"file":"static/js/185.9151120b.chunk.js","mappings":"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","sources":["components/GetMovieInfo.jsx","components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.js","components/MoviesForm/MovieForm.styled.js","components/MoviesForm/MoviesForm.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst PATH = 'https://api.themoviedb.org';\nconst KEY = 'aae9ea2751cc0bf7dcfb9c2a2683d9fc';\n\nexport const GetTranding = async () => {\n  try {\n    const response = await axios.get(\n      `${PATH}/3/trending/movie/day?api_key=${KEY}`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetSearchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${PATH}/3/search/movie?api_key=${KEY}&language=en-US&page=1&query=${query}`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetMovieByID = async id => {\n  try {\n    const response = await axios.get(\n      `${PATH}/3/movie/${id}?api_key=${KEY}&language=en-US`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetCastByID = async id => {\n  try {\n    const response = await axios.get(\n      `${PATH}/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const GetReviewsByID = async id => {\n  try {\n    const response = await axios.get(\n      `${PATH}/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    // console.log(response);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  /* list-style: none; */\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  :hover {\n    color: orangered;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, MovieLink } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.original_title}\n            </MovieLink>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  padding-top: 20px;\n  padding-left: 15px;\n`;\n\nexport const SearchBtn = styled.button`\n  border: none;\n  padding: 5px 7px;\n  border-radius: 3px;\n  :hover {\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    color: orangered;\n  }\n`;\n\nexport const Input = styled.input`\n  margin-left: 15px;\n  width: 350px;\n`;\n","import { Input, SearchBtn, SearchForm } from './MovieForm.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesForm = ({ submit, change, query }) => {\n  return (\n    <SearchForm onSubmit={submit}>\n      <SearchBtn type=\"submit\">Search</SearchBtn>\n\n      <Input\n        className=\"form-input\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={change}\n        value={query}\n      />\n    </SearchForm>\n  );\n};\nMoviesForm.propTypes = {\n  submit: PropTypes.func.isRequired,\n  change: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n};\n\nexport default MoviesForm;\n","import { GetSearchMovies } from 'components/GetMovieInfo';\nimport MoviesForm from 'components/MoviesForm/MoviesForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  let searchMovieName = searchParams.get('query') ?? '';\n\n  const handleNameChange = event => {\n    const query = event.target.value;\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchMovieName === '') return;\n\n    GetSearchMovies(searchMovieName).then(response =>\n      setMovieList(response.data.results)\n    );\n  };\n\n  useEffect(() => {\n    GetSearchMovies(searchMovieName).then(response =>\n      setMovieList(response.data.results)\n    );\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <MoviesForm\n        submit={handleSubmit}\n        change={handleNameChange}\n        query={searchMovieName}\n      />\n      {movieList && <MoviesList movies={movieList} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["PATH","KEY","GetTranding","axios","response","console","error","GetSearchMovies","query","GetMovieByID","id","GetCastByID","GetReviewsByID","List","styled","MovieLink","Link","movies","location","useLocation","map","movie","to","state","from","original_title","SearchForm","SearchBtn","Input","submit","change","onSubmit","type","className","autoComplete","autoFocus","placeholder","onChange","value","useState","movieList","setMovieList","useSearchParams","searchParams","setSearchParams","searchMovieName","get","useEffect","then","data","results","event","preventDefault","target","MoviesList"],"sourceRoot":""}